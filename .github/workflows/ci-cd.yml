name: ci-cd

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-train:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Generate data with DVC pipeline
        env:
          MLFLOW_TRACKING_URI: file:./mlruns
        run: |
          python -c "from src.simulate_uav import generate_dataset; generate_dataset('data/raw')"
          python - <<'PY'
from steps.clean import Cleaner
from steps.features import FeatureBuilder
import pandas as pd
cl=Cleaner()
df=cl.clean(cl.concat_raw('data/raw'))
fb=FeatureBuilder(out_path='data/processed/features.parquet')
fb.transform(df)
PY
          python - <<'PY'
from steps.train import Trainer
tr=Trainer()
df=tr.load()
tr.train_cv(df)
PY
      - name: Upload mlruns
        uses: actions/upload-artifact@v4
        with:
          name: mlruns
          path: mlruns

  docker:
    needs: build-train
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: mlruns
          path: mlruns
      - name: Prepare feature_list
        run: |
          mkdir -p models
          LATEST=$(ls -td mlruns/*/* | head -n 1)
          cp "$LATEST/artifacts/feature_list.json" models/feature_list.json || true
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/uav-health:latest
          docker build -t $IMAGE -f dockerfile .
          docker push $IMAGE